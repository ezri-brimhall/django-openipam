# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-02 21:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import djorm_pgfulltext.fields
import netfields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address', netfields.fields.InetAddressField(max_length=39, primary_key=True, serialize=False)),
                ('reserved', models.BooleanField(default=False)),
                ('changed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'addresses',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'addresstypes',
            },
        ),
        migrations.CreateModel(
            name='DefaultPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cidr', netfields.fields.CidrAddressField(max_length=43, unique=True)),
            ],
            options={
                'db_table': 'default_pools',
            },
        ),
        migrations.CreateModel(
            name='DhcpGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField()),
                ('description', models.TextField(blank=True, null=True)),
                ('changed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'dhcp_groups',
                'verbose_name': 'DHCP group',
            },
        ),
        migrations.CreateModel(
            name='DhcpOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('option', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dhcp_options',
                'verbose_name': 'DHCP option',
            },
        ),
        migrations.CreateModel(
            name='DhcpOptionToDhcpGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BinaryField(blank=True, null=True)),
                ('changed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'dhcp_options_to_dhcp_groups',
            },
        ),
        migrations.CreateModel(
            name='HostToPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'hosts_to_pools',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                #('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', netfields.fields.CidrAddressField(max_length=43, primary_key=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('gateway', netfields.fields.InetAddressField(blank=True, max_length=39, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('changed', models.DateTimeField(auto_now=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(db_index=True, default=b'', editable=False, null=True, serialize=False)),
            ],
            options={
                'ordering': ('network',),
                'default_permissions': ('add', 'change', 'delete', 'view'),
                'db_table': 'networks',
                'permissions': (('is_owner_network', 'Is owner'), ('add_records_to_network', 'Can add records to')),
            },
        ),
        migrations.CreateModel(
            name='NetworkRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('range', netfields.fields.CidrAddressField(max_length=43, unique=True)),
            ],
            options={
                'db_table': 'network_ranges',
            },
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField()),
                ('description', models.TextField(blank=True)),
                ('allow_unknown', models.BooleanField(default=False)),
                ('lease_time', models.IntegerField()),
                ('assignable', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'pools',
                'permissions': (('add_records_to_pool', 'Can add records to'),),
            },
        ),
        migrations.CreateModel(
            name='SharedNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('changed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'shared_networks',
            },
        ),
        migrations.CreateModel(
            name='TaggedNetworks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('changed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vlans',
            },
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('address', models.OneToOneField(db_column=b'address', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='leases', serialize=False, to='network.Address')),
                ('abandoned', models.BooleanField(default=False)),
                ('server', models.CharField(blank=True, max_length=255, null=True)),
                ('starts', models.DateTimeField()),
                ('ends', models.DateTimeField()),
            ],
            options={
                'db_table': 'leases',
            },
        ),
        migrations.CreateModel(
            name='NetworkToVlan',
            fields=[
                ('network', models.OneToOneField(db_column=b'network', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='network.Network')),
                ('changed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'networks_to_vlans',
            },
        ),
    ]
